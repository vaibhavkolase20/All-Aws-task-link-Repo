ЁЯУШ Documentation: EC2 Backup & Restore using AMI
ЁЯОп Objective

рдпрд╛ task рдордзреНрдпреЗ рдЖрдкрдг existing EC2 instance рдЪрд╛ backup (AMI) рддрдпрд╛рд░ рдХрд░реВ рдЖрдгрд┐ рддреНрдпрд╛ AMI рд╡рд░реВрди рдирд╡реАрди EC2 instance launch рдХрд░реВрди verify рдХрд░реВ рдХреА data рдЖрдгрд┐ applications preserve рдЭрд╛рд▓реЗ рдЖрд╣реЗрдд.

ЁЯЫая╕П Required AWS Services

EC2 (Elastic Compute Cloud) тАУ Instance рддрдпрд╛рд░ рдЖрдгрд┐ рдЪрд╛рд▓рд╡рдгреНрдпрд╛рд╕рд╛рдареА

EBS (Elastic Block Store) тАУ Storage рдЬрд┐рдереЗ instance рдЪрд╛ data save рд╣реЛрддреЛ

AMI (Amazon Machine Image) тАУ Backup рддрдпрд╛рд░ рдХрд░рдгреНрдпрд╛рд╕рд╛рдареА рдЖрдгрд┐ restore рдХрд░рдгреНрдпрд╛рд╕рд╛рдареА

IAM (Identity & Access Management) тАУ рдпреЛрдЧреНрдп permissions рджреЗрдгреНрдпрд╛рд╕рд╛рдареА (EC2 full access)

ЁЯФД Step-by-Step Guide
1. Launch Existing EC2 Instance

AWS Management Console рдордзреНрдпреЗ рд▓реЙрдЧрд┐рди рдХрд░рд╛

Services тЖТ EC2 тЖТ Launch Instance рдирд┐рд╡рдбрд╛

рдЦрд╛рд▓реАрд▓ рд╕реЗрдЯрд┐рдВрдЧреНрдЬ рдирд┐рд╡рдбрд╛:

Name: MyBackupInstance

AMI (OS): Ubuntu / Amazon Linux

Instance Type: t2.micro (Free tier eligible)

Key pair: New рддрдпрд╛рд░ рдХрд░рд╛ рдХрд┐рдВрд╡рд╛ existing рд╡рд╛рдкрд░рд╛

Storage: Default (8 GB EBS)

Launch Instance рдХреНрд▓рд┐рдХ рдХрд░рд╛

тЬЕ рдЖрддрд╛ рддреБрдордЪрд╛ instance рдЪрд╛рд▓реВ рдЖрд╣реЗ.

2. Connect to EC2 via SSH
ssh -i mykey.pem ubuntu@<EC2-Public-IP>

3. Install Application & Create Data

рдЙрджрд╛рд╣рд░рдгрд╛рд░реНрде тАУ Nginx install рдХрд░реВрди рдПрдХ custom webpage рддрдпрд╛рд░ рдХрд░реВ:

sudo apt update -y
sudo apt install nginx -y
echo "рдЬрдп рд╢реНрд░реА рд░рд╛рдо" | sudo tee /var/www/html/index.html
sudo systemctl enable nginx
sudo systemctl start nginx


тЬЕ рдЖрддрд╛ browser рдордзреНрдпреЗ http://<EC2-Public-IP> рдЙрдШрдбрд╛ тЖТ рддреБрдореНрд╣рд╛рд▓рд╛ "рдЬрдп рд╢реНрд░реА рд░рд╛рдо" рджрд┐рд╕реЗрд▓.

4. Create AMI Backup of Instance

AWS Console рдордзреНрдпреЗ EC2 тЖТ Instances рдЙрдШрдбрд╛

рддреБрдордЪрд╛ instance (MyBackupInstance) рдирд┐рд╡рдбрд╛

Actions тЖТ Image and templates тЖТ Create image рдХреНрд▓рд┐рдХ рдХрд░рд╛

Details рднрд░рд╛:

Image name: MyBackupAMI

Description: Backup of Nginx server with custom page

Create image рдХреНрд▓рд┐рдХ рдХрд░рд╛

тЬЕ рдереЛрдбреНрдпрд╛ рд╡реЗрд│рд╛рдиреЗ AMI рддрдпрд╛рд░ рд╣реЛрдИрд▓. (EC2 тЖТ AMIs section рдордзреНрдпреЗ рджрд┐рд╕реЗрд▓)

5. Launch New EC2 from AMI

EC2 тЖТ AMIs section рдордзреНрдпреЗ рдЬрд╛

MyBackupAMI рдирд┐рд╡рдбрд╛

Launch instance from image рдХреНрд▓рд┐рдХ рдХрд░рд╛

рдЦрд╛рд▓реАрд▓ рд╕реЗрдЯрд┐рдВрдЧреНрдЬ рджреНрдпрд╛:

Name: RestoredInstance

Instance Type: t2.micro

Key pair: Same key pair рд╡рд╛рдкрд░рд╛

Storage: Default рд░рд╛рд╣реВ рджреНрдпрд╛

Launch Instance рдХреНрд▓рд┐рдХ рдХрд░рд╛

6. Verify Data & Application

рдирд╡реАрди instance рдЪрд╛рд▓реВ рдЭрд╛рд▓реНрдпрд╛рд╡рд░ рддреНрдпрд╛рдЪрд╛ Public IP рдШреНрдпрд╛

Browser рдордзреНрдпреЗ рдЙрдШрдбрд╛:

http://<New-Instance-Public-IP>


тЬЕ рддреБрдореНрд╣рд╛рд▓рд╛ "рдЬрдп рд╢реНрд░реА рд░рд╛рдо" рджрд┐рд╕реЗрд▓ тЖТ рдореНрд╣рдгрдЬреЗ backup & restore successful рдЭрд╛рд▓реЗ.

ЁЯПБ Final Output

рдЬреБрдирд╛ instance тЖТ Custom webpage рдЪрд╛рд▓реВ рд╣реЛрддрд╛

AMI backup рдШреЗрддрд▓рд╛

рддреНрдпрд╛ AMI рд╡рд░реВрди рдирд╡реАрди EC2 launch рдХреЗрд▓рд╛

Data & application (Nginx + HTML page) preserved рд░рд╛рд╣рд┐рд▓реЗ
